generator dbml {
  provider = "prisma-dbml-generator"
  output   = "./"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String            @id @default(uuid())
  name      String            @unique
  email     String            @unique
  password  String
  role      String
  createdAt DateTime          @default(now())
  updatedAt DateTime          @default(now()) @updatedAt
  services  ServicesOnUsers[]
}

model Service {
  id          String                @id @default(uuid())
  name        String                @unique
  private     Boolean
  description String
  createdAt   DateTime              @default(now())
  updatedAt   DateTime              @default(now()) @updatedAt
  users       ServicesOnUsers[]
  templates   TemplatesOnServices[]
}

model Template {
  id          String                @id @default(uuid())
  name        String                @unique
  description String
  template    String
  createdAt   DateTime              @default(now())
  updatedAt   DateTime              @default(now()) @updatedAt
  services    TemplatesOnServices[]
  inputs      InputsOnTemplates[]
}

model Input {
  id          String              @id @default(uuid())
  input       String
  description String
  type        String
  templateId  String              @unique
  createdAt   DateTime            @default(now())
  updatedAt   DateTime            @default(now()) @updatedAt
  template    InputsOnTemplates[]
}

model ServicesOnUsers {
  user      User    @relation(fields: [userId], references: [id])
  userId    String
  service   Service @relation(fields: [serviceId], references: [id])
  serviceId String

  @@id([userId, serviceId])
}

model TemplatesOnServices {
  template   Template @relation(fields: [templateId], references: [id])
  templateId String
  service    Service  @relation(fields: [serviceId], references: [id])
  serviceId  String

  @@id([templateId, serviceId])
}

model InputsOnTemplates {
  template   Template @relation(fields: [templateId], references: [id])
  templateId String
  input      Input    @relation(fields: [inputId], references: [id])
  inputId    String

  @@id([templateId, inputId])
}
