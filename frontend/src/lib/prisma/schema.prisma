generator client {
  provider = "prisma-client-js"
  output   = "./generated/prisma"
}

generator dbml {
  provider = "prisma-dbml-generator"
  output   = "./generated/dbml"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String            @id @default(uuid())
  name      String            @unique
  email     String            @unique
  password  String
  services  ServicesOnUsers[]
  createdAt DateTime          @default(now())
  updatedAt DateTime          @default(now()) @updatedAt
}

model Service {
  id          String                @id @default(uuid())
  name        String                @unique
  private     Boolean
  description String                @default("")
  users       ServicesOnUsers[]
  templates   TemplatesOnServices[]
  createdAt   DateTime              @default(now())
  updatedAt   DateTime              @default(now()) @updatedAt
}

model Template {
  id          String                @id @default(uuid())
  name        String                @unique
  description String
  template    String
  services    TemplatesOnServices[]
  input       TemplateInput?
  createdAt   DateTime              @default(now())
  updatedAt   DateTime              @default(now()) @updatedAt
}

model TemplateInput {
  id         String   @id @default(uuid())
  input      String   @default("")
  template   Template @relation(fields: [templateId], references: [id])
  templateId String   @unique @default("")
  createdAt  DateTime @default(now())
  updatedAt  DateTime @default(now()) @updatedAt
}

model ServicesOnUsers {
  user      User    @relation(fields: [userId], references: [id])
  userId    String
  service   Service @relation(fields: [serviceId], references: [id])
  serviceId String

  @@id([userId, serviceId])
}

model TemplatesOnServices {
  template   Template @relation(fields: [templateId], references: [id])
  templateId String
  service    Service  @relation(fields: [serviceId], references: [id])
  serviceId  String

  @@id([templateId, serviceId])
}
